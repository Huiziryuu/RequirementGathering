@model Evaluation
@{
    var descriptionValue = Resource.GetPropertyValue<Evaluation>(Model.Id.ToString(), "Description");
}

<div class="form-group">
    @Html.LabelFor(model => model.Version, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Version, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @value = descriptionValue } })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        <div class="checkbox">
            @Html.EditorFor(model => model.IsActive)
            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ProductId, "Product", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownList("ProductId", null, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
    </div>
</div>
